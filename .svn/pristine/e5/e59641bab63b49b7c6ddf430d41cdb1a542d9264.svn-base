<%@ page language="java" import="java.util.*" pageEncoding="utf-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<%
	String path = request.getContextPath();
	String basePath = request.getScheme() + "://" + request.getServerName() + ":" + request.getServerPort()
			+ path + "/";
	String roleid = request.getParameter("roleid");
%>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<base href="<%=basePath%>">
<meta charset="utf-8">
<meta name="viewport"
	content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
<title>权限列表</title>
<link rel="stylesheet" href="<%=basePath%>/plugins/layui/css/layui.css">
<style>
body {
	margin: 50px;
}
</style>
<style type="text/css">
form {
	width: 500px;
	margin: 10px auto;
}

h1, h2, h3 {
	padding: 10px 0;
}

.layui-form {
	width: 90%;
	border: 1px solid #9C9C9C;
	overflow: auto;
	margin-bottom: 30px;
	background-color: #fff;
	padding: 10px 0 25px 5px;
}

.partPer {
	width: 25%;
	float: left;
}
</style>
</head>
<body>
	<form class="layui-form">
		<div class='partPer'>
			<div id="xtree1"></div>
		</div>
		<div class='partPer'>
			<div id="xtree2"></div>
		</div>
		<div class='partPer'>
			<div id="xtree3"></div>
		</div>
		<div class='partPer'>
			<div id="xtree4"></div>
		</div>

		<div class="div-btns">
			<input type="button" id="btn1"
				value="获取全部[选中的][末级节点]原checkbox DOM对象，返回Array"
				class="layui-btn layui-btn-fluid" />
		</div>
		<!--
		<div class="div-btns">
			<input type="button" id="btn3" value="更新数据，重新渲染"
				class="layui-btn layui-btn-fluid" />
		</div>
		<div class="div-btns">
			<div class="layui-form-item">
				<label class="layui-form-label">value值</label>
				<div class="layui-input-block">
					<input type="text" id="txt1" placeholder="如：jd1.1"
						autocomplete="off" class="layui-input">
				</div>
			</div>
			<input type="button" id="btn4"
				value="通过value值找父级DOM对象，顶级节点与错误值均返回null"
				class="layui-btn layui-btn-fluid" />
		</div> -->

	</form>
	<script type="text/javascript" src="js/jquery-1.11.0.min.js"></script>
	<script src="plugins/layui/layui.js"></script>
	<!--引用xtree-->
	<script src="plugins/layui-xtree/layui-xtree.js"></script>
	<script type="text/javascript">
		//一套json数据下面会使用，同时供你参考
		var json = [ {
			title : "节点1",
			value : "jd1",
			data : [ {
				title : "节点1.1",
				checked : true,
				disabled : true,
				value : "jd1.1",
				data : [ {
					title : "节点1.1",
					checked : true,
					disabled : true,
					value : "jd1.1",
					data : []
				}, {
					title : "节点1.2",
					value : "jd1.2",
					checked : true,
					data : []
				}, {
					title : "节点1.3",
					value : "jd1.3",
					data : []
				}, {
					title : "节点1.4",
					value : "jd1.4",
					data : []
				} ]
			}, {
				title : "节点1.2",
				value : "jd1.2",
				checked : true,
				data : []
			}, {
				title : "节点1.3",
				value : "jd1.3",
				disabled : true,
				data : []
			}, {
				title : "节点1.4",
				value : "jd1.4",
				data : []
			} ]
		}, {
			title : "节点2",
			value : "jd2",
			data : [ {
				title : "节点2.1",
				value : "jd2.1",
				data : []
			}, {
				title : "节点2.2",
				value : "jd2.2",
				data : []
			}, {
				title : "节点2.3",
				value : "jd2.3",
				data : []
			}, {
				title : "节点2.4",
				value : "jd2.4",
				data : []
			} ]
		}, {
			title : "节点3",
			value : "jd3",
			data : []
		}, {
			title : "节点4",
			value : "jd4",
			data : []
		} ];

		layui.use([ 'form' ], function() {
			var form = layui.form;

			//1、最基础的用法 - 直接绑定json
			var xtree1 = new layuiXtree({
				elem : 'xtree1',
				form : form,
				data : "permission/selectPermissions.dx?roleid=<%=roleid%>&codeid='01'"
				,
				isopen : true //加载完毕后的展开状态，默认值：true
				,
				ckall : true //启用全选功能，默认值：false
				,
				ckallback : function() {
				} //全选框状态改变后执行的回调函数
				,
				icon : { //三种图标样式，更改几个都可以，用的是layui的图标
					open : "&#xe614;" //节点打开的图标
					,
					close : "&#xe622;" //节点关闭的图标
					,
					end : "" //末尾节点的图标
				},
				color : { //三种图标颜色，独立配色，更改几个都可以
					open : "#EE9A00" //节点图标打开的颜色
					,
					close : "#EEC591" //节点图标关闭的颜色
					,
					end : "#828282" //末级节点图标的颜色
				},
				click : function(data) { //节点选中状态改变事件监听，全选框有自己的监听事件
					console.log(data.elem); //得到checkbox原始DOM对象
					console.log(data.elem.checked); //开关是否开启，true或者false
					console.log(data.value); //开关value值，也可以通过data.elem.value得到
					console.log(data.othis); //得到美化后的DOM对象
				}
			});
			//1、最基础的用法 - 直接绑定json
			var xtree2 = new layuiXtree({
				elem : 'xtree2',
				form : form,
				data : json,
				isopen : false //加载完毕后的展开状态，默认值：true
				,
				ckall : true //启用全选功能，默认值：false
				,
				ckallback : function() {
				} //全选框状态改变后执行的回调函数
				,
				icon : { //三种图标样式，更改几个都可以，用的是layui的图标
					open : "&#xe614;" //节点打开的图标
					,
					close : "&#xe622;" //节点关闭的图标
					,
					end : "" //末尾节点的图标
				},
				color : { //三种图标颜色，独立配色，更改几个都可以
					open : "#EE9A00" //节点图标打开的颜色
					,
					close : "#EEC591" //节点图标关闭的颜色
					,
					end : "#828282" //末级节点图标的颜色
				},
				click : function(data) { //节点选中状态改变事件监听，全选框有自己的监听事件
					console.log(data.elem); //得到checkbox原始DOM对象
					console.log(data.elem.checked); //开关是否开启，true或者false
					console.log(data.value); //开关value值，也可以通过data.elem.value得到
					console.log(data.othis); //得到美化后的DOM对象
				}
			});
			//1、最基础的用法 - 直接绑定json
			var xtree3 = new layuiXtree({
				elem : 'xtree3',
				form : form,
				data : json,
				isopen : false //加载完毕后的展开状态，默认值：true
				,
				ckall : true //启用全选功能，默认值：false
				,
				ckallback : function() {
				} //全选框状态改变后执行的回调函数
				,
				icon : { //三种图标样式，更改几个都可以，用的是layui的图标
					open : "&#xe614;" //节点打开的图标
					,
					close : "&#xe622;" //节点关闭的图标
					,
					end : "" //末尾节点的图标
				},
				color : { //三种图标颜色，独立配色，更改几个都可以
					open : "#EE9A00" //节点图标打开的颜色
					,
					close : "#EEC591" //节点图标关闭的颜色
					,
					end : "#828282" //末级节点图标的颜色
				},
				click : function(data) { //节点选中状态改变事件监听，全选框有自己的监听事件
					console.log(data.elem); //得到checkbox原始DOM对象
					console.log(data.elem.checked); //开关是否开启，true或者false
					console.log(data.value); //开关value值，也可以通过data.elem.value得到
					console.log(data.othis); //得到美化后的DOM对象
				}
			});
			//1、最基础的用法 - 直接绑定json
			var xtree4 = new layuiXtree({
				elem : 'xtree4',
				form : form,
				data : json,
				isopen : false //加载完毕后的展开状态，默认值：true
				,
				ckall : true //启用全选功能，默认值：false
				,
				ckallback : function() {
				} //全选框状态改变后执行的回调函数
				,
				icon : { //三种图标样式，更改几个都可以，用的是layui的图标
					open : "&#xe614;" //节点打开的图标
					,
					close : "&#xe622;" //节点关闭的图标
					,
					end : "" //末尾节点的图标
				},
				color : { //三种图标颜色，独立配色，更改几个都可以
					open : "#EE9A00" //节点图标打开的颜色
					,
					close : "#EEC591" //节点图标关闭的颜色
					,
					end : "#828282" //末级节点图标的颜色
				},
				click : function(data) { //节点选中状态改变事件监听，全选框有自己的监听事件
					console.log(data.elem); //得到checkbox原始DOM对象
					console.log(data.elem.checked); //开关是否开启，true或者false
					console.log(data.value); //开关value值，也可以通过data.elem.value得到
					console.log(data.othis); //得到美化后的DOM对象
				}
			});
			//获取全部[选中的][末级节点]原checkbox DOM对象，返回Array
			document.getElementById('btn1').onclick = function() {

				var oCks = xtree1.GetChecked(); //这是方法

				for (var i = 0; i < oCks.length; i++) {
					console.log(oCks[i].value);
				}
			}

		});
	</script>
</body>
</html>
